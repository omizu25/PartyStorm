//=============================================================================
//
// 移動処理(move.h)
// Author : 唐﨑結斗
// 概要 : 移動に関する計算を行う
//
//=============================================================================
#ifndef _MOVE_H_		// このマクロ定義がされてなかったら
#define _MOVE_H_		// 二重インクルード防止のマクロ定義

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "main.h"

//=============================================================================
// 移動クラス
// Author : 唐﨑結斗
// 概要 : 移動設定を行うクラス
//=============================================================================
class CMove
{
public:
	//--------------------------------------------------------------------
	// コンストラクタとデストラクタ
	//--------------------------------------------------------------------
	CMove();
	virtual ~CMove();

	//--------------------------------------------------------------------
	// メンバ関数
	//--------------------------------------------------------------------
	void SetMoving(float fSpeed, float fMaxSpeed, float fMinSpeed, float fFriction);				// 移動情報の初期設定
	void Moving(const D3DXVECTOR3 &moveDir);														// 慣性を伴う移動
	D3DXVECTOR3 GetMove() { return m_move; }														// 移動ベクトルのゲッター
	float GetMoveLength() { return D3DXVec3Length(&m_move); }										// 移動距離のゲッター

private:
	//--------------------------------------------------------------------
	// メンバ変数
	//--------------------------------------------------------------------
	D3DXVECTOR3			m_move;					// 移動量
	float				m_fSpeed;				// 移動速度
	float				m_fMaxSpeed;			// 最高速度
	float				m_fMinSpeed;			// 最低速度
	float				m_fFriction;			// 摩擦係数
};

#endif