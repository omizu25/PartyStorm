//=============================================================================
//
// 追従モデルクラス(follow_model.h)
// Author : 唐﨑結斗
// 概要 : 追従モデル生成を行う
//
//=============================================================================
#ifndef _FOLLOW_MODEL_H_			// このマクロ定義がされてなかったら
#define _FOLLOW_MODEL_H_			// 二重インクルード防止のマクロ定義

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "model_obj.h"
#include "main.h"

//=============================================================================
// モデルオブジェクトクラス
// Author : 唐﨑結斗
// 概要 : モデルオブジェクト生成を行うクラス
//=============================================================================
class CFollowModel : public CModelObj
{
public:
	//--------------------------------------------------------------------
	// 静的メンバ関数
	//--------------------------------------------------------------------
	static CFollowModel *Create();	// 追従モデルの生成

	//--------------------------------------------------------------------
	// コンストラクタとデストラクタ
	//--------------------------------------------------------------------
	CFollowModel();
	~CFollowModel();

	//--------------------------------------------------------------------
	// メンバ関数
	//--------------------------------------------------------------------
	void Update() override;																	// 更新
	void SetFollow(const D3DXVECTOR3 posDest);												// 目的の位置を指定
	void SetFollow(bool bFollow) { m_bFollow = bFollow; }									// 追従判定の設定
	void SetSpeed(const float fSpeed) { m_fSpeed = fSpeed; }								// 速度の設定
	void SetCoefficient(const float fCoefficient) { m_fCoefficient = fCoefficient; }		// 減衰係数の設定

private:
	//--------------------------------------------------------------------
	// メンバ関数
	//--------------------------------------------------------------------
	void Follow();

	//--------------------------------------------------------------------
	// メンバ変数
	//--------------------------------------------------------------------
	D3DXVECTOR3 m_posDest;		// 目的の位置
	D3DXVECTOR3 m_moveVec;		// 移動方向
	float m_fSpeed;				// 移動速度
	float m_fCoefficient;		// 減衰係数
	bool m_bFollow;				// 追従判定
};

#endif

