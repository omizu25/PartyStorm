//=============================================================================
//
// ゲームクラス(game.h)
// Author : 唐﨑結斗
// 概要 : ゲームクラスの管理を行う
//
//=============================================================================
#ifndef _GAME_H_		// このマクロ定義がされてなかったら
#define _GAME_H_		// 二重インクルード防止のマクロ定義

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "scene_mode.h"

//*****************************************************************************
// 前方宣言
//*****************************************************************************
class CPlayer;
class CEnemyShark;
class CMesh3D;
class CScore;
class CTime;
class CFollowModel;
class CObject2D;
class CObstacleManager;

//=============================================================================
// ゲームクラス
// Author : 唐﨑結斗
// 概要 : ゲーム生成を行うクラス
//=============================================================================
class CGame : public CSceneMode
{
public:
	//--------------------------------------------------------------------
	// 定数定義
	//--------------------------------------------------------------------
	static const D3DXVECTOR3 CAMERA_POSV;	// 視点
	static const D3DXVECTOR3 CAMERA_POSR;	// 注視点

	//--------------------------------------------------------------------
	// 静的メンバ関数
	//--------------------------------------------------------------------
	static void SetGame(const bool bGame) { m_bGame = bGame; }			// ゲームの状況の設定
	static bool GetGame() { return m_bGame; }							// ゲームの状況のゲッター
	static CMesh3D *GetMesh() { return m_pMesh3D; }						// メッシュのゲッター
	static CTime *GetTime() { return m_pTime; }							// タイムのゲッター
	static CPlayer **GetPlayer() { return m_pPlayer; }					// プレイヤーのゲッター
	static CFollowModel *GetCameraTarget() { return m_pCameraTarget; }	// カメラターゲットのゲッター
	static CObstacleManager *GetObstacle() { return m_pObstacle; }		// 障害物のマネージャーのゲッター

	//--------------------------------------------------------------------
	// コンストラクタとデストラクタ
	//--------------------------------------------------------------------
	CGame();
	~CGame() override;

	//--------------------------------------------------------------------
	// メンバ関数
	//--------------------------------------------------------------------
	HRESULT Init() override;	// 初期化
	void Uninit() override;		// 終了
	void Update() override;		// 更新
	void Draw() override;		// 描画

private:
	//--------------------------------------------------------------------
	// メンバ関数
	//--------------------------------------------------------------------
	void ObjChange();	// オブジェクトの変更
	void Dead();		// 死亡判定

	//--------------------------------------------------------------------
	// 静的メンバ変数
	//--------------------------------------------------------------------
	static CPlayer **m_pPlayer;				// プレイヤークラス
	static CEnemyShark *m_pEnemyShark;		// サメ敵
	static CMesh3D *m_pMesh3D;				// メッシュクラス
	static CScore *m_pScore;				// スコアクラス
	static CTime *m_pTime;					// タイムクラス
	static CFollowModel *m_pCameraTarget;	// カメラターゲット
	static CObstacleManager *m_pObstacle;	// 障害物のマネージャー
	static bool m_bGame;					// ゲームの状況

	//--------------------------------------------------------------------
	// メンバ変数
	//--------------------------------------------------------------------
	int m_nCntFrame;		// フレームカウント
	CObject2D *m_pTutorial;	// チュートリアル
};

#endif



